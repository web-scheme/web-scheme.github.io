import{_ as l,r as o,o as i,c as p,a,w as e,b as u,d as n,e as s}from"./app.ed3351a4.js";const r={},m=u('<p>WebScheme compiles <a href="/r7rs-small.pdf">Scheme</a> code into <a href="https://webassembly.org" target="_self" rel="noopener noreferrer">WebAssembly</a> modules. This allows run-time or compile-time linkage to other WebAssembly modules, including those implemented in foreign languages via <a href="https://github.com/WebAssembly/component-model" target="_self" rel="noopener noreferrer">components</a>.</p><p>WebScheme programs containing library definitions are able to produce Wasm modules. For example, this Scheme library may result in this Wasm module, pending the adoption of the <a href="https://github.com/WebAssembly/gc" target="_self" rel="noopener noreferrer">GC</a> and <a href="https://github.com/WebAssembly/proposal-type-imports" target="_self" rel="noopener noreferrer">type imports</a> proposals:</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Wasm (as well as R\u2077RS) is evolving fast. Most of the advanced features on which WebScheme intends to depend (GC, interface types, type imports, etc.) are in various stages of proposal, but based on the proposals so far, Wasm should eventually enable a compact, performant implementation.</p></div>',3),k=n("div",{class:"language-scheme ext-scheme line-numbers-mode"},[n("pre",{class:"language-scheme"},[n("code",null,[n("span",{class:"token comment"},";; Library names are resolved to compiled Wasm module files by"),s(`
`),n("span",{class:"token comment"},";; converting the library name parts to their external representation"),s(`
`),n("span",{class:"token comment"},";; and concetenating them as subdirectories of the root library directory."),s(`
`),n("span",{class:"token comment"},";; For example, `(com |Foo \u{1F600}| 12 |\\x15|)`"),s(`
`),n("span",{class:"token comment"},";; would resolve to `${ROOT}/com/Foo\\ \u{1F600}/12/\\x15.wasm`,"),s(`
`),n("span",{class:"token comment"},";; containing either a Wasm core module also compiled by WebScheme,"),s(`
`),n("span",{class:"token comment"},";; or an adapter module compiled by anything."),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"define-library"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"library"),s(" name"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},";; The compiler can either produce a standalone executable"),s(`
  `),n("span",{class:"token comment"},";; or keep this import dynamic."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"scheme"),s(" base"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},";; Globals and functions can be directly imported."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"only"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"com"),s(),n("span",{class:"token identifier"},"|Foo \u{1F600}|"),s(),n("span",{class:"token number"},"12"),s(),n("span",{class:"token identifier"},"|\\x15|"),n("span",{class:"token punctuation"},")"),s(" external-function"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"begin"),s(`
    `),n("span",{class:"token comment"},";; Macros are exported as simple global `syntax-rules` objects"),s(`
    `),n("span",{class:"token comment"},";; and also listed in a special table."),s(`
    `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"define-syntax"),s(` macro
      `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"syntax-rules"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"macro"),s(" x ..."),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"list"),s(" x ..."),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},";; Functions are exported as Wasm functions."),s(`
    `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"define"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"function"),s(" x y"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"external-function"),s(" x x"),n("span",{class:"token punctuation"},")"),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},";; All other objects are exported as globals."),s(`
    `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"define"),s(" value "),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token comment"},";; All expressions are evaluated in the module's start function."),s(`
    `),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"display"),s(),n("span",{class:"token string"},'"Instantiated!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"export"),s(" macro function value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),d=n("div",{class:"language-scheme ext-scheme line-numbers-mode"},[n("pre",{class:"language-scheme"},[n("code",null,[n("span",{class:"token comment"},";; The compiled core module."),s(`
`),n("span",{class:"token comment"},";; Using extensions, it would also be possible to produce an adapter module."),s(`
`),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"module"),s(`

  `),n("span",{class:"token comment"},';; The special "s-lang" module is the runtime.'),s(`
  `),n("span",{class:"token comment"},";; Types and functions are imported as needed and always statically linked."),s(`
  `),n("span",{class:"token comment"},";; Two S-lang programs compiled against different versions of the runtime"),s(`
  `),n("span",{class:"token comment"},";; may have incompatible ABIs."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"s-lang"'),s(),n("span",{class:"token string"},'"t-obj"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"type"),s(" $t-obj"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("                    "),n("span",{class:"token comment"},";; Super-type for all objects."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"s-lang"'),s(),n("span",{class:"token string"},'"t-pair"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"type"),s(" $t-pair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("                  "),n("span",{class:"token comment"},";; Pair type."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"s-lang"'),s(),n("span",{class:"token string"},'"t-string"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"type"),s(" $t-string"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("              "),n("span",{class:"token comment"},";; String type."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"s-lang"'),s(),n("span",{class:"token string"},'"t-syntax-rules"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"type"),s(" $t-syntax-rules"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},";; `syntax-rules` (macro) type."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"s-lang"'),s(),n("span",{class:"token string"},'"t-null"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"type"),s(" $t-null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("                  "),n("span",{class:"token comment"},";; Null type."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"s-lang"'),s(),n("span",{class:"token string"},'"null"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"global"),s(" $null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s("                    "),n("span",{class:"token comment"},";; Null value."),s(`

  `),n("span",{class:"token comment"},";; The import compiler can statically analyze libraries"),s(`
  `),n("span",{class:"token comment"},";; to only import what it needs for import sets without an `only` clause."),s(`
  `),n("span",{class:"token comment"},";; `display` only takes 1 parameter: the list of parameters."),s(`
  `),n("span",{class:"token comment"},";; This is true of all functions defined as `(<name> . <parameters>)`,"),s(`
  `),n("span",{class:"token comment"},";; and allows a rare (if limited) opportunity for static typing."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"(scheme base)"'),s(),n("span",{class:"token string"},'"display"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"func"),s(" $display "),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"param"),s(" $t-pair"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},";; The module name is the canonical external representation"),s(`
  `),n("span",{class:"token comment"},";; of the entire library name."),s(`
  `),n("span",{class:"token comment"},";; The function signature is determined by inspection of the dependency"),s(`
  `),n("span",{class:"token comment"},";; at compile-time."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"(com |Foo \u{1F600}| 12 |\\x15|)"'),s(),n("span",{class:"token string"},'"external-function"'),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"func"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"param"),s(" $t-obj"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"result"),s(" $t-obj"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},";; `syntax-rules` (a.k.a macros) can be imported and exported,"),s(`
  `),n("span",{class:"token comment"},";; and have a run-time representation."),s(`
  `),n("span",{class:"token comment"},";; Although dynamic imports will not affect already-running code"),s(`
  `),n("span",{class:"token comment"},";; (and at that point could only really be used with `eval`),"),s(`
  `),n("span",{class:"token comment"},";; static (as configurable by compiler flag) imports apply to subsequent code."),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"global"),s(" $macro "),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token string"},'"macro"'),n("span",{class:"token punctuation"},")"),s(" $t-syntax-rules ..."),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"func"),s(" $function "),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token string"},'"function"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"param"),s(" $x $t-obj"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"param"),s(" $y $t-obj"),n("span",{class:"token punctuation"},")"),s(" ..."),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"global"),s(" $value "),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token string"},'"value"'),n("span",{class:"token punctuation"},")"),s(" $t-string ..."),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"func"),s(" $_start ..."),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"start"),s(" $_start"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function b(v,f){const t=o("CodeGroupItem"),c=o("CodeGroup");return i(),p("div",null,[m,a(c,null,{default:e(()=>[a(t,{title:"Scheme"},{default:e(()=>[k]),_:1}),a(t,{title:"Wasm"},{default:e(()=>[d]),_:1})]),_:1})])}var g=l(r,[["render",b],["__file","index.html.vue"]]);export{g as default};
